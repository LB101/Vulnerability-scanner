import asyncio
import aiohttp

async def check_url(session, url):
    try:
        async with session.get(url) as response:
            if response.status == 200:
                print("[+] Found:", url)
    except aiohttp.ClientError:
        pass

async def scan_directory(base_url, directory, session):
    url = base_url + directory
    await check_url(session, url)

async def dirbuster(base_url, wordlist_file="wordlist.txt", num_concurrent=100):
    async with aiohttp.ClientSession() as session:
        with open(wordlist_file, 'r') as f:
            directories = [line.strip() for line in f]

        tasks = []
        for directory in directories:
            task = scan_directory(base_url, directory, session)
            tasks.append(task)

            if len(tasks) >= num_concurrent:
                await asyncio.gather(*tasks)
                tasks = []

        if tasks:
            await asyncio.gather(*tasks)

if __name__ == "__main__":
    base_url = "http://example.com/"
    asyncio.run(dirbuster(base_url))
