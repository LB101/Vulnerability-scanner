import requests

def check_sql_injection(url):
    # Base payload for SQL injection
    payload = "'"

    # Parse the URL to extract parameters
    parsed_url = url.split("?")
    if len(parsed_url) > 1:
        params = parsed_url[-1].split("&")
    else:
        print("No parameters found in the URL.")
        return

    # Add the payload to each parameter in the URL
    modified_params = {}
    for param in params:
        parts = param.split("=")
        key = parts[0]
        value = "1" if len(parts) == 1 else parts[1] + payload
        modified_params[key] = value

    # Send request with modified parameters
    response = requests.get(url, params=modified_params)

    # Check if SQL error message is present in the response
    if "SQL syntax" in response.text:
        print("SQL Injection Vulnerability Found!")
    else:
        print("No SQL Injection Vulnerability Detected.")

# Example usage
if __name__ == "__main__":
    url = input("Enter the URL to check for SQL injection vulnerabilities: ")
    check_sql_injection(url)
